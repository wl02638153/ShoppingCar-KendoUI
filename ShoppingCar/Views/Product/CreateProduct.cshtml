@model ShoppingCar.Models.Product

@{
    ViewBag.Title = "CreateProduct";
    if (Session["Member"] != null)
    {
        if (Session["Member"].ToString() == "Admin")
        {
            Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
        }
        else
        {
            Layout = "~/Views/Shared/_LayoutMember.cshtml";
        }
    }
}
<head>
    
</head>
<script type="text/javascript">
    function readImg(file) {
        if (file.files && file.files[0]) {
            var reader = new FileReader();
            reader.onload = function (e) {
                $('#UploadImg').attr('src', e.target.result);
            };
            reader.readAsDataURL(file.files[0]);
        }
    }
    function Confirm_custom(str) {
        if (confirm(str)) {
            onSubmitBlock();
            return true;
        }
        else {
            return false;
        }
    }
    function onSubmitBlock() {
        $.blockUI({
            message: "請稍等..."
        });
    }
    function buttonShow() {
        $("#ImportFileSubmit").removeAttr("disabled");
    }
    function LargebuttonShow() {
        $("#ImportLargeFileSubmit").removeAttr("disabled");
    }
</script>
@if (TempData["ResultErrorMessage"] != null)
{
    <script type="text/javascript">
            window.onload = function () {
                alert("@TempData["ResultErrorMessage"]");
            };
    </script>
}

@if (TempData["ExcelResultErrorMessage"] != null)
{
    <script type="text/javascript">
            window.onload = function () {
                alert("@TempData["ExcelResultErrorMessage"]");
            };
    </script>
}
@if (TempData["ImgValidate"] != null)
{
    <script type="text/javascript">
            window.onload = function () {
                alert("@TempData["ImgValidate"]");
            };
    </script>
}
@if (TempData["DBResultErrorMessage"] != null)
{
    <script type="text/javascript">
            window.onload = function () {
                alert("@TempData["DBResultErrorMessage"]");
            };
    </script>
}
<h2>@ShoppingCar.App_GlobalResources.CreateProductResource.CreateProduct</h2>
<hr />
@using (Html.BeginForm("CreateProduct", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>@ShoppingCar.App_GlobalResources.CreateProductResource.Add_single_product</h4>
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.ProductID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ProductID, new { htmlAttributes = new { @class = "form-control", required = "required" } })
            @Html.ValidationMessageFor(model => model.ProductID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control", required = "required" } })
            @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
        </div>
    </div>
    <style>
        textarea {
            resize: none;
        }
    </style>
    <div class="form-group">
        @Html.LabelFor(model => model.ProductExplain, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.ProductExplain, new { htmlAttributes = new { @class = "form-control" }, cols = "37", rows = "10" })
            @Html.ValidationMessageFor(model => model.ProductExplain, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ProductPrice, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ProductPrice, new { htmlAttributes = new { @class = "form-control", type = "number", step = "0.01", required = "required" } })
            @Html.ValidationMessageFor(model => model.ProductPrice, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Product_Category.CategoryName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @(Html.Kendo().DropDownList().Name("CategoryID").DataTextField("CategoryName").DataValueField("CategoryID")
                                            .DataSource(source =>
                                            {
                                                source.Read(read =>
                                                {
                                                    read.Action("Product_Category", "Product");
                                                });
                                            })
                                            .HtmlAttributes(new { style = "" })
            )
            @Html.ValidationMessageFor(model => model.Product_Category, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ProductImg, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" name="ImgFile" id="ImgFile" accept="image/*" required />
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" name="InsertProduct" id="InsertProduct" value="Create" class="btn btn-default" />

        </div>
    </div>
</div>
}

<form method="post" action='@Url.Action("Basic_Usage_Submit")'>
    <div class="demo-section k-content">
        <h4>Kendo upload test</h4>
        @(Html.Kendo().Upload()
                    .Name("files")
                    .HtmlAttributes(new { aria_label = "files" })
                    .Validation(validation => validation.AllowedExtensions(new string[] { ".gif", ".jpg", ".png" }).MaxFileSize(3145728))
        )
        <div class="demo-hint">You can only upload <strong>GIF</strong>, <strong>JPG</strong>, <strong>PNG</strong> files.</div>
        <p style="padding-top: 1em; text-align: right">
            <button type="submit" class="k-button k-primary">Submit</button>
        </p>
    </div>
</form>
    <hr />
<h3>@ShoppingCar.App_GlobalResources.CreateProductResource.Data_format</h3>
<p>@ShoppingCar.App_GlobalResources.CreateProductResource.Data_format_1</p>
<p>@ShoppingCar.App_GlobalResources.CreateProductResource.Data_format_2</p>
<p>@ShoppingCar.App_GlobalResources.CreateProductResource.Data_format_3</p>
<p>@ShoppingCar.App_GlobalResources.CreateProductResource.Data_format_4</p>
<p>@ShoppingCar.App_GlobalResources.CreateProductResource.Data_format_5</p>
<p>
    <a href="~/Excel/ExcelCreateFormat.xlsx">下載Excel格式</a>
</p>
@*<form method="post" action="InsertProductTest" enctype="multipart/form-data" onsubmit="onSubmitBlock()">
    <div class="form-group">
        <div class="">
            <input type="submit" value="Test" />
            <p>@TempData["InsertProductTest"]</p>
            <div style="overflow:auto;width:50%;height:100px;">@Html.Raw(TempData["InsertProductTestMessage"])</div>
        </div>
    </div>
</form>*@
<hr />
<div class="row">
    <div class="col-sm-5">
        <form method="post" action="ImportProduct" enctype="multipart/form-data" onsubmit="onSubmitBlock()">
            <h4>@ShoppingCar.App_GlobalResources.CreateProductResource.Excel_create_product</h4>
            <input id="ImportFile" name="ImportFile" type="file" accept="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" onchange="buttonShow()">
            <p></p>
            <div class="form-group">
                <div class="">
                    <input type="submit" id="ImportFileSubmit" value="@ShoppingCar.App_GlobalResources.CreateProductResource.Import_button" class="btn btn-default" disabled="disabled" onsubmit="Confirm_custom('@ShoppingCar.App_GlobalResources.CreateProductResource.Confirm_import')" />
                </div>
                <p>@TempData["ExcelInsertTime"]</p>
                <div style="overflow:auto;width:50%;height:100px;">@Html.Raw(TempData["ExcelResultMessage"])</div>
            </div>
        </form>
    </div>
    <div class="col-sm-5">
        <form method="post" action="ImportLargeProduct" enctype="multipart/form-data" onsubmit="Confirm_custom('@ShoppingCar.App_GlobalResources.CreateProductResource.Confirm_import')">
            <h4>@ShoppingCar.App_GlobalResources.CreateProductResource.Excel_insert1000</h4>
            <input id="ImportLargeFile" name="ImportLargeFile" type="file" accept="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" onchange="LargebuttonShow()">
            <p></p>
            <div class="form-group">
                <input type="submit" id="ImportLargeFileSubmit" value="@ShoppingCar.App_GlobalResources.CreateProductResource.Import_button" class="btn btn-default" disabled="disabled" />
                <p>@TempData["ExcelLargeInsertTime"]</p>
                <div style="overflow:auto;width:50%;height:100px;">@Html.Raw(TempData["ExcelLargeResultMessage"])</div>
            </div>
        </form>
    </div>
</div>

